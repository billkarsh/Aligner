#!/bin/sh

# Purpose:
# Emit SLURM sbatch command requesting <n> slots on single machine.
#
# > QSUB_1NODE.sht iclient "jobname" "stdoutfile" ierrfile slots "command"
#
# iclient is an index identifying the context from which this script
# has been called...It's used to select an execution time hint for
# the scheduler (times in minutes).
#
# stdoutfile names your stdout file. The empty string, "", selects
# /dev/null, which suppresses output.
#
# ierrfile is one of {0,1}. Zero joins stderr to stdout. One creates
# an error file named "<jobname>.err".
#
# Aligner requires:
# -J <jobname>  ;jobname
# --chdir=$PWD  ;execute in current working directory
# --export=ALL  ;pass current environment vars to job
#
# Set variable usr_params according to your local cluster
# requirements and policies. For example, you may be able
# to direct billing to a particular account.


req_params="--chdir=$PWD --export=ALL -p compute --qos=batch"

usr_params=""

# Table of measured (estimated) times...
client_time[1]=$((5))			# fsub (make.fm list)
client_time[2]=$((5))			# ssub (make.same list)
client_time[3]=$((10))			# dsub (make.down list)
client_time[4]=$((1))			# msub (each lyr, fast)
client_time[5]=$((6))			# subscapes-midZ (each pair)
client_time[6]=$((2))			# subscapes-topZ
client_time[7]=$((20))			# bsub (each D-block)
client_time[8]=$((5))			# single-node solver
client_time[9]=$((1))			# finish (deprecated)
client_time[10]=$((10))			# submos (deprecated)

client_time[30]=$((10))			# MRCSD1Lyr
client_time[31]=$((10))			# GrayRanger
client_time[32]=$((10))			# HEQLayers
client_time[33]=$((10))			# HistAll
client_time[34]=$((10))			# RGBMerge

# Multiply by fudge factor to set time limit
timeMultiplier=4

selected_time=${client_time[$1]}

if [ "$selected_time" != "" ]
then
  time_limit="--time=$((selected_time * timeMultiplier))"
else
  time_limit=""
fi

if [ "$3" != "" ]
then
  outfile=$3
else
  outfile="/dev/null"
fi

if [ $4 == 0 ]
then
  errorcmd=""
else
  errorcmd="-e $2.err"
fi

sbatch $time_limit -J "$2" $req_params $usr_params -o $outfile $errorcmd --cpus-per-task=$5 --mem-per-cpu=10G --wrap "$6"

